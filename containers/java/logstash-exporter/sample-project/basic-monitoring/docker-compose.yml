version: '3.8'

networks:
  monitoring:
    driver: bridge
  logstash:
    driver: bridge

services:
  # Logstash instance
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: logstash-basic
    restart: unless-stopped
    ports:
      - "9600:9600"  # Logstash API
      - "5044:5044"  # Beats input
      - "5000:5000"  # TCP input
    environment:
      - LS_JAVA_OPTS=-Xmx256m -Xms256m
      - XPACK_MONITORING_ENABLED=true
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./logstash/logs:/usr/share/logstash/logs
    networks:
      - logstash
      - monitoring
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9600/_node/stats"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Logstash Exporter
  logstash-exporter:
    image: cleanstart/logstash-exporter:latest
    container_name: logstash-exporter-basic
    restart: unless-stopped
    ports:
      - "9198:9198"
    environment:
      - LOGSTASH_SERVER=http://logstash:9600
      - LOGSTASH_TIMEOUT=5s
    networks:
      - monitoring
    depends_on:
      - logstash
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9198/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Sample Data Generator
  log-generator:
    image: python:3.9-alpine
    container_name: log-generator-basic
    restart: unless-stopped
    ports:
      - "8080:8080"
    working_dir: /app
    command: >
      sh -c "pip install flask requests &&
             python3 /app/generate_logs.py"
    volumes:
      - ./log-generator:/app
    networks:
      - logstash
      - monitoring
    depends_on:
      - logstash
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Simple Web App for Testing
  test-app:
    image: nginx:alpine
    container_name: test-app-basic
    restart: unless-stopped
    ports:
      - "8081:80"
    volumes:
      - ./test-app:/usr/share/nginx/html:ro
    networks:
      - logstash
      - monitoring
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  logstash_logs:
    driver: local
