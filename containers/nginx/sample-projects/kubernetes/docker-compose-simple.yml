version: '3.8'

services:
  # Nginx Web Server
  nginx-app:
    image: cleanstart/nginx:latest
    container_name: nginx-app
    ports:
      - "8080:80"
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Backend Service 1 (for load balancing demo)
  backend-1:
    image: cleanstart/python:latest
    container_name: backend-1
    environment:
      - BACKEND_ID=backend-1
      - PORT=5000
      - FLASK_ENV=production
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend Service 2 (for load balancing demo)
  backend-2:
    image: cleanstart/python:latest
    container_name: backend-2
    environment:
      - BACKEND_ID=backend-2
      - PORT=5000
      - FLASK_ENV=production
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend Service 3 (for load balancing demo)
  backend-3:
    image: cleanstart/python:latest
    container_name: backend-3
    environment:
      - BACKEND_ID=backend-3
      - PORT=5000
      - FLASK_ENV=production
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Load Balancer
  nginx-lb:
    image: cleanstart/nginx:latest
    container_name: nginx-lb
    ports:
      - "8081:80"
    volumes:
      - ./nginx-lb-simple.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network
    depends_on:
      backend-1:
        condition: service_healthy
      backend-2:
        condition: service_healthy
      backend-3:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge
