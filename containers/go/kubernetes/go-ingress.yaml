apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: go-web-ingress
  labels:
    app: go-web-app
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "1m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization"
spec:
  ingressClassName: nginx
  rules:
  - host: go-web.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: go-web-service
            port:
              number: 80
  - host: go-web.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: go-web-service
            port:
              number: 80
---
# Alternative Ingress for LoadBalancer
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: go-web-ingress-lb
  labels:
    app: go-web-app
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: go-web-service
            port:
              number: 80
